@model IEnumerable<MvcMovie.Models.Person>
@using X.PagedList;
@using X.PagedList.Mvc.Core;
@{
    ViewData["Title"] = "Index";
}

<p>
<a asp-action="Create">Create New</a>
<a class="btn btn-cuccess" asp-action="Download">Download</a>
</p>

<h4>Student</h4>
<form  asp-action="Index">
<input type="text"name="KeySearch"/>
<input type="submit" value="Search">
</form>


</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.PersonId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FullName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Address)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.PersonId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FullName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address)
                </td>

                <td>
                    <a asp-action="Edit" asp-route-PersonId="@item.PersonId">Edit</a> |
                    <a asp-action="Delete" asp-route-PersonId="@item.PersonId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@Html.PagedListPager((IPagedList) Model, page => Url.Action("Index", new {page = page}),
new X.PagedList.web.Common.PagedListRenderOptions { LiElementClasses = new string[] {"page-item"},
  PageClasses = new string[] { "page-link" }})